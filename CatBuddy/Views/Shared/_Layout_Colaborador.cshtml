@using CatBuddy.Utils
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    // Recupera os dados da sessão do colaborador
    Colaborador colaborador = JsonConvert.DeserializeObject<Colaborador>(HttpContextAccessor.HttpContext.Session.GetString("Login.Colaborador"));
}

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CatBuddy</title>
    <link rel="shortcut icon" href="~/img/logogato2.png">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="~/css/bootstrapcatbuddy.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Paytone+One&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/CatBuddy.styles.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm align-content-between navbar-dark fundo-navBar border-bottom box-shadow mb-3">
            <div class="container-fluid">

                @*Botão para modo celular*@
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <ul class="nav navbar-collapse collapse justify-content-around" aria-expanded="false">
                    <li>
                        <div class="nav ">
                            <a class="navbar-brand" asp-controller="Colaborador" asp-action="Index"><img src="~/img/logo.png" style="height:12vh;" /></a>
                        </div>
                    </li>
                    <li class="d-flex">
                        <div class="dropdown me-5">
                            <div class="text-white font-paytone-one-regular tamanho-fonte-nav-bar" type="button" id="dropdownMenuButton" aria-expanded="false">
                                Produtos
                            </div>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                <li><a class="dropdown-item" asp-action="CadastrarProduto" asp-controller="Produto">Cadastrar produto</a></li>
                                <li><a class="dropdown-item" asp-action="VizualizarProdutos" asp-controller="Produto">Informações Produtos</a></li>
                            </ul>
                        </div>

                        @if (colaborador != null && (colaborador.NivelDeAcesso == Const.GERENTE || colaborador.NivelDeAcesso == Const.RH || colaborador.NivelDeAcesso == Const.MASTER))
                        {
                            <div class="dropdown me-5">
                                <div class="text-white font-paytone-one-regular tamanho-fonte-nav-bar" type="button" id="dropdownMenuButton" aria-expanded="false">
                                    Funcionario
                                </div>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <li><a class="dropdown-item" asp-action="CadastrarColaborador" asp-controller="Colaborador">Cadastrar novo colaborador</a></li>
                                    <li><a class="dropdown-item" asp-action="VisualizarColaboradores" asp-controller="Colaborador">Colaboradores</a></li>
                                </ul>
                            </div>
                        }
                        @if (colaborador != null && (colaborador.NivelDeAcesso == Const.GERENTE || colaborador.NivelDeAcesso == Const.VENDEDOR || colaborador.NivelDeAcesso == Const.MASTER))
                        {
                            <div class="dropdown me-5">
                                <div class="text-white font-paytone-one-regular tamanho-fonte-nav-bar" type="button" id="dropdownMenuButton" aria-expanded="false">
                                    Fornecedor
                                </div>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <li><a class="dropdown-item" asp-action="CadastrarForncedor" asp-controller="Fornecedor">Cadastrar novo fornecedor</a></li>
                                    <li><a class="dropdown-item" asp-action="VisualizarFornecedor" asp-controller="Fornecedor">Fornecedores</a></li>
                                </ul>
                            </div>
                        }
                    </li>
                    <li>
                        <ul class="nav navbar-collapse collapse flex-grow-0 text-decoration-none">
                            <li class="nav-item text-white">Olá, @colaborador.nomeColaborador</li>
                            <li class="nav-item"><a asp-controller="Colaborador" asp-action="Sair" class="bi bi-box-arrow-right text-white m-4 d-grid text-decoration-none tamanho-fonte-nav-bar"></a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    @if (MainLayout.IsDialogOpen())
    {
        <div id="overlay" onclick="fecharDialog(event)">
            <dialog id="Dialog" open style="position: fixed; top: 50%; left: 32%; background-color: var(--white); border: none; border-radius: 15px; color: var(--darkFuchsia); width: 35%;">
                <b style="margin-left: 10px">@MainLayout.TituloDialog</b>
                <hr />
                <p style="margin-left: 10px">@MainLayout.ConteudoDialog</p>
                <div class="d-flex justify-content-end gap-2">
                    <a id="Sair" onclick="fecharDialog()" class="btn btn-success text-white">Voltar</a>
                    <a asp-action="ExecutarDialog" class="btn btn-danger">Deletar</a>
                </div>
            </dialog>
        </div>
    }

    @if (MainLayout.IsSnackBarOpen())
    {
        <div id="snackbar" class="text-white" style="background-color: #860F58;">@MainLayout.MensagemSnackbar</div>
        <script>
            fecharSnackBar(); // Chama a função para fechar o snackbar após 3 segundos
        </script>
    }

    <script>
        function fecharDialog(event = null) {
            const dialog = document.getElementById('Dialog');

            // Verifica se o clique foi dentro do próprio dialog
            if (dialog.contains(event.target)) {
                if (event.target.id === 'Sair') {
                    chamaApiFechaDialog();
                }
                return; // Se foi dentro do dialog, não faz nada
            }
            chamaApiFechaDialog()
        }

        function chamaApiFechaDialog() {

            // Se for fora, chama a API que fecha o dialog
            fetch('/api/front/CloseDialog', {
                method: 'GET'
            })
                .then(response => {
                    if (response.ok) {
                        document.getElementById('overlay').remove(); // Remove o overlay do DOM
                    } else {
                    }
                })
                .catch(error => {
                    Alert('Estamos com problemas, chame um técnico');
                });
        }
    </script>

    <script>
        // Função para fechar o snackbar após um tempo determinado
        function fecharSnackBar() {
            // Espera 3 segundos (3000 milissegundos) e depois fecha o snackbar
            setTimeout(function () {
                // Fecha o snackbar chamando a função do ASP.NET Core via AJAX
                fetch('/api/front/CloseSnackBar', {
                    method: 'GET',
                    headers: {
                    },
                }).then(response => {
                    if (response.ok) {
                        console.log('Snackbar fechado com sucesso.');
                    } else {
                        console.error('Erro ao fechar o snackbar:', response.statusText);
                    }
                }).catch(error => {
                    console.error('Erro ao fechar o snackbar:', error);
                });
            }, 5000); // Tempo em milissegundos (3 segundos)
        }

        // Chamada para iniciar o temporizador quando o snackbar é exibido
        if (@MainLayout.IsSnackBarOpen().ToString().ToLower()) {
            fecharSnackBar();
        }
    </script>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container text-white">
            &copy; @DateTime.Now.Year - CatBuddy
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/mask/jquery.mask.min.js"></script>


    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
